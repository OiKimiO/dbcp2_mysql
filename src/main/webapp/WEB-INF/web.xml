<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<!-- 서버 통신시 encoding 설정 -->
	<filter> 
		<filter-name>encodingFilter</filter-name> 
		<filter-class> org.springframework.web.filter.CharacterEncodingFilter </filter-class> 
		<init-param> 
			<param-name>encoding</param-name> 
			<param-value>UTF-8</param-value> 
		</init-param> 
	</filter> 
	
	<filter-mapping> 
		<filter-name>encodingFilter</filter-name> 
		<url-pattern>/*</url-pattern> 
	</filter-mapping>
	
	<!-- http 입력 -> https로 변환 -->
	<security-constraint>
    	<web-resource-collection>
        	<web-resource-name>SSL Forward</web-resource-name>
        	<url-pattern>/*</url-pattern>
    	</web-resource-collection>

    	<user-data-constraint>
        	<transport-guarantee>CONFIDENTIAL</transport-guarantee>
    	</user-data-constraint>
	</security-constraint>
	
	<!-- 에러 페이지 처리 -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/views/error/error500.jsp</location>
	</error-page>
	
	<error-page>
		<exception-code>404</exception-code>
		<location>/WEB-INF/views/error/error404.jsp</location>
	</error-page>
	
	<error-page>
		<exception-type>500</exception-type>
		<location>/WEB-INF/views/error/error500.jsp</location>
	</error-page>
	
	<!-- http로 오더라도 처리되는 파일 url -->
	<security-constraint>
	    <web-resource-collection>
	        <web-resource-name>HTTPS or HTTP</web-resource-name>
	        <url-pattern>/images/*</url-pattern>
	        <url-pattern>/css/*</url-pattern>
	    </web-resource-collection>
	
	    <user-data-constraint>
	        <transport-guarantee>NONE</transport-guarantee>
	    </user-data-constraint>	
	</security-constraint>
	
	<!-- spring Security setting -->
	<!-- 
		HttpSessionEventPublisher : 한 유저가 다른 부라우저로 동시 로그인 하는 것을 막음  
		DelegatingFilterProxy     : 모든 요청은 이 프록시 필터를 거친다. 스프링시큐리는 이를 통해 인증, 인가를 수행
		-->
	<!-- <listener>
	    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener> -->
	<filter>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>	
	<!-- spring Security setting -->
	
	<!-- 응용 프로그램 요청 처리 -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/**/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<context-param>
	    <param-name>log4jConfiguration</param-name>	
	    <param-value>classpath:/**/log4j2.xml</param-value>
	</context-param>
	
	<!-- 자식 서블릿을 사용하기 위한 설정 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 부모 서블릿을 같이 사용하는 자식 서블릿 등록 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/**/*-context.xml</param-value>
	</context-param>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
